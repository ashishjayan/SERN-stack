{"version":3,"sources":["App.js","reducer/index.js","index.js"],"names":["App","react_default","a","createElement","className","App_Navigation","App_Main","Component","Navigation","NavLink","exact","activeClassName","to","onClick","this","forceUpdate","Employee","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","value","console","log","concat","callApi","asyncToGenerator","regenerator_default","mark","_callee","response","body","wrap","_context","prev","next","fetch","sent","json","setState","users","post","SSN","status","Error","message","abrupt","stop","handleSubmit","_ref2","_callee2","e","_context2","showResults","preventDefault","method","headers","Content-Type","JSON","stringify","state","responseToPost","_x","apply","arguments","change","target","checkNULL","MINIT","_this2","then","res","express","catch","err","_this3","result","map","employee","key","FNAME","LNAME","onChange","Department","_this4","_callee3","_context3","departments","handleClick","department","metaData","departmentInfo","departLocationInfo","projectInfo","employeeInfo","managerInfo","DNUMBER","_this5","_this6","index","fetchDetails","data-title","DNAME","moment","MGRSTARTDATE","format","DLOCATION","project","PNUMBER","PNAME","PLOCATION","Delete","Main","Switch","Route","path","component","rootReducer","combineReducers","createStoreWithMiddleware","applyMiddleware","Promise","createStore","ReactDOM","render","es","store","reducers","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.cdb8837b.chunk.js","sourcesContent":["import React, { Component, Button } from \"react\";\r\nimport { NavLink, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport moment from \"moment\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Navigation />\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              exact\r\n              activeClassName=\"current\"\r\n              to=\"/app\"\r\n              onClick={this.forceUpdate}\r\n            >\r\n              Employee List\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              exact\r\n              activeClassName=\"current\"\r\n              onClick={this.forceUpdate}\r\n              to=\"/app/department\"\r\n            >\r\n              Department List\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nclass Employee extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      response: \"\",\r\n      post: \"\",\r\n      responseToPost: [],\r\n      showResults: false\r\n    };\r\n  }\r\n  handleChange = value => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await fetch(\"/api/employee\");\r\n    const body = await response.json();\r\n    this.setState({\r\n      users: body,\r\n      post: body[0].SSN\r\n    });\r\n    if (response.status !== 200) throw Error(body.message);\r\n\r\n    return body;\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    this.setState({\r\n      showResults: true\r\n    });\r\n    console.log(\"working\");\r\n    e.preventDefault();\r\n    const response = await fetch(\"/api/specificEmployee\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ post: this.state.post })\r\n    });\r\n    const body = await response.json();\r\n\r\n    this.setState({ responseToPost: body });\r\n    console.log(this.state.responseToPost);\r\n  };\r\n  change = e => {\r\n    this.setState({ post: e.target.value });\r\n  };\r\n  checkNULL = MINIT => {\r\n    if (MINIT === \"  NULL\") return \"\";\r\n    else return MINIT;\r\n  };\r\n  render() {\r\n    let result = null;\r\n    if (this.state.showResults) {\r\n      result = (\r\n        <div>\r\n          {this.state.responseToPost.map(employee => (\r\n            <strong key={employee.FNAME}>\r\n              {employee.FNAME} {this.checkNULL(employee.MINIT)},{\" \"}\r\n              {employee.LNAME}{\" \"}\r\n            </strong>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h4>Get Employee Details for :</h4>\r\n        <select onChange={this.change}>\r\n          {this.state.users.map(users => (\r\n            <option key={users.SSN} value={users.SSN}>\r\n              {users.SSN}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button onClick={this.handleSubmit}>CLICK ME</button>\r\n        {result}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Department extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      departments: [],\r\n      metaData: null,\r\n      departmentInfo: null,\r\n      departLocationInfo: null,\r\n      projectInfo: null,\r\n      employeeInfo: null,\r\n      managerInfo: null\r\n    };\r\n  }\r\n  async fetchDetails(department) {\r\n    const response = await fetch(\"/api/specificDepartment\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ post: department.DNUMBER })\r\n    });\r\n    const body = await response.json();\r\n    this.setState({\r\n      departLocationInfo: body.departLocationInfo[0],\r\n      departmentInfo: body.departmentInfo[0],\r\n      projectInfo: body.projectInfo[0],\r\n      employeeInfo: body.employeeInfo[0],\r\n      managerInfo: body.managerInfo[0]\r\n    });\r\n    if (response.status !== 200) throw Error(body.message);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await fetch(\"/api/department\");\r\n    const body = await response.json();\r\n    this.setState({\r\n      departments: body\r\n    });\r\n    if (response.status !== 200) throw Error(body.message);\r\n\r\n    return body;\r\n  };\r\n  handleClick = department => {\r\n    console.log(department);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.departments);\r\n    return (\r\n      <div className=\"App\">\r\n        <tbody>\r\n          <table>\r\n            <tr>\r\n              <th>Department Name </th>\r\n              <th> Department Number</th>\r\n            </tr>\r\n            {this.state.departments.map((department, index) => {\r\n              return (\r\n                <tr key={index} onClick={() => this.fetchDetails(department)}>\r\n                  <td data-title=\"DNAME\">{department.DNAME}</td>\r\n                  <td data-title=\"DNUMBER\">{department.DNUMBER}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </table>\r\n\r\n          {this.state.departmentInfo && this.state.managerInfo ? (\r\n            <div>\r\n              <p>\r\n                <strong>Department :</strong>\r\n                {` ${this.state.departmentInfo[0].DNAME}`}\r\n              </p>\r\n              <p>\r\n                <strong>Manager :</strong>\r\n                {` ${this.state.managerInfo[0].LNAME}, ${\r\n                  this.state.managerInfo[0].FNAME\r\n                }`}\r\n              </p>\r\n              <p>\r\n                <strong>Manager Start Date :</strong>\r\n                {` ${moment(this.state.departmentInfo[0].MGRSTARTDATE).format(\r\n                  \"L\"\r\n                )}`}\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          {this.state.departLocationInfo ? (\r\n            <table>\r\n              <tr>\r\n                <th>Department Location </th>\r\n              </tr>\r\n              {this.state.departLocationInfo.map((department, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td data-title=\"DLOCATION\">{department.DLOCATION}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </table>\r\n          ) : null}\r\n\r\n          {this.state.projectInfo ? (\r\n            <table>\r\n              <tr>\r\n                <th>Project Number </th>\r\n                <th> Project Name</th>\r\n                <th> Project Location</th>\r\n              </tr>\r\n              {this.state.projectInfo.map((project, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td data-title=\"PNUMBER\">{project.PNUMBER}</td>\r\n                    <td data-title=\"PNAME\">{project.PNAME}</td>\r\n                    <td data-title=\"PLOCATION\">{project.PLOCATION}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </table>\r\n          ) : null}\r\n\r\n          {this.state.employeeInfo ? (\r\n            <table>\r\n              <tr>\r\n                <th>Employee SSN </th>\r\n                <th> Last Name</th>\r\n                <th> First Name</th>\r\n              </tr>\r\n              {this.state.employeeInfo.map((employee, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td data-title=\"SSN\">{employee.SSN}</td>\r\n                    <td data-title=\"LNAME\">{employee.LNAME}</td>\r\n                    <td data-title=\"FNAME\">{employee.FNAME}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </table>\r\n          ) : null}\r\n        </tbody>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Delete = () => (\r\n  <div className=\"contact\">\r\n    <p>Dank</p>\r\n  </div>\r\n);\r\n\r\nconst Main = () => (\r\n  <Switch>\r\n    <Route exact path=\"/app\" component={Employee} />\r\n    <Route exact path=\"/app/department\" component={Department} />\r\n    <Route exact path=\"/app/delete\" component={Delete} />\r\n  </Switch>\r\n);\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reducers from \"./reducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Promise from \"redux-promise\";\r\nconst createStoreWithMiddleware = applyMiddleware(Promise)(createStore);\r\nReactDOM.render(\r\n  <Provider store={createStoreWithMiddleware(reducers)}>\r\n    <BrowserRouter>\r\n      <div>\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" component={App} />\r\n          <Route path=\"/app\" component={App} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}